@model int
@{
    ViewData["Title"] = "AddCompetences";
}

<h1>AddCompetences</h1>
<style type="text/css">
    .form-style-5 {
        max-width: 500px;
        padding: 10px 20px;
        background: #f4f7f8;
        margin: 10px auto;
        padding: 20px;
        background: #f4f7f8;
        border-radius: 8px;
        font-family: Georgia, "Times New Roman", Times, serif;
    }

        .form-style-5 fieldset {
            border: none;
        }

        .form-style-5 legend {
            font-size: 1.4em;
            margin-bottom: 10px;
        }

        .form-style-5 label {
            display: block;
            margin-bottom: 8px;
        }

        .form-style-5 input[type="text"],
        .form-style-5 input[type="date"],
        .form-style-5 input[type="datetime"],
        .form-style-5 input[type="email"],
        .form-style-5 input[type="number"],
        .form-style-5 input[type="search"],
        .form-style-5 input[type="time"],
        .form-style-5 input[type="url"],
        .form-style-5 textarea,
        .form-style-5 select {
            font-family: Georgia, "Times New Roman", Times, serif;
            background: rgba(255,255,255,.1);
            border: none;
            border-radius: 4px;
            font-size: 15px;
            margin: 0;
            outline: 0;
            padding: 10px;
            width: 100%;
            box-sizing: border-box;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            background-color: #e8eeef;
            color: #8a97a0;
            -webkit-box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
            box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
            margin-bottom: 30px;
        }

            .form-style-5 input[type="text"]:focus,
            .form-style-5 input[type="date"]:focus,
            .form-style-5 input[type="datetime"]:focus,
            .form-style-5 input[type="email"]:focus,
            .form-style-5 input[type="number"]:focus,
            .form-style-5 input[type="search"]:focus,
            .form-style-5 input[type="time"]:focus,
            .form-style-5 input[type="url"]:focus,
            .form-style-5 textarea:focus,
            .form-style-5 select:focus {
                background: #d2d9dd;
            }

        .form-style-5 select {
            -webkit-appearance: menulist-button;
            height: 35px;
        }

        .form-style-5 input[type="submit"],
        .form-style-5 input[type="button"] {
            position: relative;
            display: block;
            padding: 19px 39px 18px 39px;
            color: #FFF;
            margin: 0 auto;
            background: #663366;
            font-size: 18px;
            text-align: center;
            font-style: normal;
            width: 100%;
            border: 1px solid #663366;
            border-width: 1px 1px 3px;
            margin-bottom: 10px;
        }

            .form-style-5 input[type="submit"]:hover,
            .form-style-5 input[type="button"]:hover {
                background: #e40086;
            }
</style>
<div style="padding-bottom: 70px; padding-top: 20px">
    <div class="form-style-5">
        <fieldset>
            <legend style="text-align: center">Add task</legend>
            <label style="float:left;">Section:</label><button id="AddSectionCompetence" style="float:right;margin-bottom:5%;" class="btn-voorkeur">Add Section</button>
            <select id="sections" type="text" name="field1"></select>
            <label style="float:left;">Unit:</label><button id="AddUnitCompetence" style="float:right;margin-bottom:5%;" class="btn-voorkeur">Add Unit</button>
            <select id="units" type="text" name="field2"></select>
            <label style="float:left;">Term execution:</label><button id="AddTermExecutionCompetence" style="float:right;margin-bottom:5%;" class="btn-voorkeur">Add Term execution</button>
            <select id="execId" type="text" name="field3"></select>
            <label style="float:left;">Tasks:</label><button id="AddTaskCompetence" style="float:right;margin-bottom:5%;" class="btn-voorkeur">Add Period</button>
            <select id="task" type="text" name="field4"></select>
        </fieldset>
    </div>
</div>

@section Scripts
    {
    <script>

        $(document).ready(function() {
            $.post('@Url.Action("GetSectionsWhereUserIsNotCompetentFor", "Team")',
                {
                    employeeid: '@Model'
                },
                function(data) {
                    var selectedExec = $('#sections');
                    data.forEach(function(exec) {
                        selectedExec.append($("<option></option>")
                            .attr("value", exec.id)
                            .text(exec.name));
                    });
                });
        });

        $('#sections').click(function() {
            $('#units').empty();
            $('#execId').empty();
            $('#taskId').empty();
            var selectedSectionId = $("#sections option:selected").val();
            $.post('@Url.Action("GetUnitWhereUserIsNotCompetentFor", "Team")',
                {
                    id: selectedSectionId,
                    employeeid: @Model
                },
                function(data) {
                    var selectedUnit = $('#units');
                    data.forEach(function(section) {
                        selectedUnit.append($("<option></option>")
                            .attr("value", section.id)
                            .text(section.name));
                    });
                });
        });

        $('#units').click(function() {
            $('#execId').empty();
            $('#taskId').empty();
            var selectedUnitId = $("#units option:selected").val();
            $.post('@Url.Action("GetTermExecsWhereUserIsNotCompetentFor", "Team")',
                {
                    id: selectedUnitId,
                    employeeid: @Model
                },
                function(data) {
                    var selectedExec = $('#execId');
                    data.forEach(function(exec) {
                        selectedExec.append($("<option></option>")
                            .attr("value", exec.id)
                            .text(exec.name));
                    });
                });
        });

        $('#execId').click(function() {
            $('#taskId').empty();
            var selectedUnitId = $("#units option:selected").val();
            $.post('@Url.Action("GetTasksWhereUserIsNotCompetentFor", "Team")',
                {
                    id: selectedUnitId,
                    employeeid: @Model
                },
                function(data) {
                    var selectedExec = $('#task');
                    data.forEach(function(exec) {
                        selectedExec.append($("<option></option>")
                            .attr("value", exec.id)
                            .text(exec.name));
                    });
                });
        });

        $('#AddSectionCompetence').on('click', (function () {
                var data = {
                    id: $('#sections').val(),
                    employeeId: @Model.ToString()
                }
            console.log(data);
            $.ajax({
                url: '@Url.Action("AddSectionCompetence", "Team")',
                data: data,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function() {
                        console.log('Success!');
                        alert("Succes");
                        location.reload();
                    },
                    error: function() {
                        console.log('Error');
                    }   
                });
            })
        );

        $('#AddTermExecutionCompetence').on('click', (function () {
                var data = {
                    id: $('#execId').val(),
                    employeeId: @Model.ToString()
                }
            console.log(data);
                $.ajax({
                    url: '@Url.Action("AddUnitExecCompetence", "Team")',
                    data: data,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function() {
                        console.log('Success!');
                        alert("Succes");
                        location.reload();
                    },
                    error: function() {
                        console.log('Error');
                    }
                });
            })
        );

        $('#AddTaskCompetence').on('click', (function () {
                var data = {
                    id: $('#task').val(),
                    employeeId: @Model.ToString()
                }
                 console.log(data);
                $.ajax({
                    url: '@Url.Action("AddTasksCompetence", "Team")',
                    data: data,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function() {
                        console.log('Success!');
                        alert("Succes");
                        location.reload();
                    },
                    error: function() {
                        console.log('Error');
                    }
                });
            })
        );

        $('#AddUnitCompetence').on('click', (function () {
            var data = {
                id: $('#units').val(),
                employeeId: @Model.ToString()
            }
            console.log(data);
            $.ajax({
                url: '@Url.Action("AddUnitCompetence", "Team")',
                data: data,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function() {
                        console.log('Success!');
                        alert("Succes");
                        location.reload();
                    },
                    error: function() {
                        console.log('Error');
                    }
                });
            })
        );

    </script>

}
